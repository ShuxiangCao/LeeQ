# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import epii_pb2 as epii__pb2


class ExperimentPlatformServiceStub(object):
    """gRPC Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCapabilities = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/GetCapabilities',
                request_serializer=epii__pb2.Empty.SerializeToString,
                response_deserializer=epii__pb2.CapabilitiesResponse.FromString,
                )
        self.Ping = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/Ping',
                request_serializer=epii__pb2.Empty.SerializeToString,
                response_deserializer=epii__pb2.PingResponse.FromString,
                )
        self.RunExperiment = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/RunExperiment',
                request_serializer=epii__pb2.ExperimentRequest.SerializeToString,
                response_deserializer=epii__pb2.ExperimentResponse.FromString,
                )
        self.ListAvailableExperiments = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/ListAvailableExperiments',
                request_serializer=epii__pb2.Empty.SerializeToString,
                response_deserializer=epii__pb2.ExperimentsResponse.FromString,
                )
        self.ListParameters = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/ListParameters',
                request_serializer=epii__pb2.Empty.SerializeToString,
                response_deserializer=epii__pb2.ParametersListResponse.FromString,
                )
        self.GetParameters = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/GetParameters',
                request_serializer=epii__pb2.ParameterRequest.SerializeToString,
                response_deserializer=epii__pb2.ParametersResponse.FromString,
                )
        self.SetParameters = channel.unary_unary(
                '/epii.v1.ExperimentPlatformService/SetParameters',
                request_serializer=epii__pb2.SetParametersRequest.SerializeToString,
                response_deserializer=epii__pb2.StatusResponse.FromString,
                )


class ExperimentPlatformServiceServicer(object):
    """gRPC Service Definition
    """

    def GetCapabilities(self, request, context):
        """Service metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunExperiment(self, request, context):
        """Experiment execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailableExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListParameters(self, request, context):
        """Parameter management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentPlatformServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCapabilities,
                    request_deserializer=epii__pb2.Empty.FromString,
                    response_serializer=epii__pb2.CapabilitiesResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=epii__pb2.Empty.FromString,
                    response_serializer=epii__pb2.PingResponse.SerializeToString,
            ),
            'RunExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.RunExperiment,
                    request_deserializer=epii__pb2.ExperimentRequest.FromString,
                    response_serializer=epii__pb2.ExperimentResponse.SerializeToString,
            ),
            'ListAvailableExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailableExperiments,
                    request_deserializer=epii__pb2.Empty.FromString,
                    response_serializer=epii__pb2.ExperimentsResponse.SerializeToString,
            ),
            'ListParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListParameters,
                    request_deserializer=epii__pb2.Empty.FromString,
                    response_serializer=epii__pb2.ParametersListResponse.SerializeToString,
            ),
            'GetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameters,
                    request_deserializer=epii__pb2.ParameterRequest.FromString,
                    response_serializer=epii__pb2.ParametersResponse.SerializeToString,
            ),
            'SetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetParameters,
                    request_deserializer=epii__pb2.SetParametersRequest.FromString,
                    response_serializer=epii__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'epii.v1.ExperimentPlatformService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentPlatformService(object):
    """gRPC Service Definition
    """

    @staticmethod
    def GetCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/GetCapabilities',
            epii__pb2.Empty.SerializeToString,
            epii__pb2.CapabilitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/Ping',
            epii__pb2.Empty.SerializeToString,
            epii__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/RunExperiment',
            epii__pb2.ExperimentRequest.SerializeToString,
            epii__pb2.ExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAvailableExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/ListAvailableExperiments',
            epii__pb2.Empty.SerializeToString,
            epii__pb2.ExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/ListParameters',
            epii__pb2.Empty.SerializeToString,
            epii__pb2.ParametersListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/GetParameters',
            epii__pb2.ParameterRequest.SerializeToString,
            epii__pb2.ParametersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/epii.v1.ExperimentPlatformService/SetParameters',
            epii__pb2.SetParametersRequest.SerializeToString,
            epii__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
